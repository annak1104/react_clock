{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["normalizedDate","date","toUTCString","slice","Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","nextProps","nextState","name","props","prevName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAaMA,EAAiB,SAACC,GAAD,OAAgBA,EACpCC,cAAcC,OAJE,IACF,IAKJC,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAKd,EAAe,EAAKK,MAAMC,UACtC,OAZP,mCAeE,SACES,EACAC,GAEA,OAAOD,EAAUE,OAASR,KAAKS,MAAMD,MAChCD,EAAUV,QAAUG,KAAKJ,MAAMC,QApBxC,gCAuBE,YAAqD,IAA1Ba,EAAyB,EAA/BF,KACXA,EAASR,KAAKS,MAAdD,KAEJE,IAAaF,GAEfJ,QAAQO,MAAR,uBAA8BD,EAA9B,eAA6CF,MA5BnD,kCAgCE,WACEP,OAAOW,cAAcZ,KAAKD,WAjC9B,oBAoCE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KACAX,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGtB,EAAeM,YAjD1B,GAA2BiB,IAAMC,WCZjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,GAQX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAuBEwB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,KAzB9B,EA4BEK,YAAc,WACZ,EAAKvB,SAAS,CAAEkB,UAAU,KA7B9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,cAAe5B,KAAKuB,mBAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,aAExC1B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAdP,kCAiBE,WACEf,OAAOW,cAAcZ,KAAKD,SAC1B4B,SAASE,oBAAoB,cAAe7B,KAAKuB,mBACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,eApB/C,oBAgCE,WACE,MAAgC1B,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOb,KAAMc,WAvClC,GAAyBR,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e526c761.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nconst sliceStart = -12;\nconst sliceEnd = -4;\n\nconst normalizedDate = (date: Date) => date\n  .toUTCString().slice(sliceStart, sliceEnd);\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(normalizedDate(this.state.today));\n    }, 1000);\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<State>,\n  ): boolean {\n    return nextProps.name !== this.props.name\n      || nextState.today !== this.state.today;\n  }\n\n  componentDidUpdate({ name: prevName }: Props): void {\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {normalizedDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}